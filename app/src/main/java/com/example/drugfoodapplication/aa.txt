private void showAddFoodDialog() {
        LayoutInflater inflater = LayoutInflater.from(getContext());
        View dialogView = inflater.inflate(R.layout.dialog_add_food, null);

        Spinner spinnerCategory = dialogView.findViewById(R.id.spinner_food_category);
        Spinner spinnerFood = dialogView.findViewById(R.id.spinner_food_name);
        EditText editCalories = dialogView.findViewById(R.id.edit_calories);
        EditText editDescription = dialogView.findViewById(R.id.edit_description);

        List<String> categories = new ArrayList<>(foodMap.keySet());
        ArrayAdapter<String> categoryAdapter = new ArrayAdapter<>(requireContext(),
                android.R.layout.simple_spinner_item, categories);
        categoryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerCategory.setAdapter(categoryAdapter);

        // Başlangıçta boş adapter ile başla
        ArrayAdapter<String> foodAdapter = new ArrayAdapter<>(requireContext(),
                android.R.layout.simple_spinner_item, new ArrayList<>());
        foodAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerFood.setAdapter(foodAdapter);

        // Kategori seçilince ilgili besinler gelsin
        spinnerCategory.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                String selectedCategory = categories.get(position);
                List<String> foods = foodMap.get(selectedCategory);
                foodAdapter.clear();
                if (foods != null) foodAdapter.addAll(foods);
                foodAdapter.notifyDataSetChanged();

                // Besin ve diğer alanları temizle
                spinnerFood.setSelection(0);
                editCalories.setText("");
                editDescription.setText("");
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {}
        });

        // Besin seçilince kalori ve açıklama dolsun
        spinnerFood.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                String selectedFood = (String) spinnerFood.getSelectedItem();
                if (selectedFood != null) {
                    editCalories.setText(String.valueOf(caloriesMap.get(selectedFood)));
                    editDescription.setText(descriptionMap.get(selectedFood));
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {}
        });

        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        builder.setTitle("Yeni Besin Ekle")
                .setView(dialogView)
                .setPositiveButton("Ekle", (dialog, which) -> {
                    String selectedCategory = spinnerCategory.getSelectedItem() != null ? spinnerCategory.getSelectedItem().toString() : "";
                    String selectedFood = spinnerFood.getSelectedItem() != null ? spinnerFood.getSelectedItem().toString() : "";
                    String calories = editCalories.getText().toString();
                    String description = editDescription.getText().toString();

                    if (selectedCategory.isEmpty() || selectedFood.isEmpty()) {
                        Toast.makeText(getContext(), "Kategori ve besin seçmelisin!", Toast.LENGTH_SHORT).show();
                        return;
                    }

                    // Room'a ekleme
                    Food food = new Food(
                            selectedFood,            // name
                            selectedCategory,        // category
                            description,             // description
                            calories.isEmpty() ? 0 : Integer.parseInt(calories), // calories
                            false,                   // favorite
                            userEmail                // userEmail
                    );


                    foodViewModel.insertFood(food);
                    allFoods.add(food);
                    filterFoods(searchEditText.getText().toString());
                })
                .setNegativeButton("İptal", null)
                .show();
    }